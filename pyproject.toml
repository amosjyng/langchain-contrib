[tool.poetry]
name = "langchain-contrib"
version = "0.0.4"
description = ""
authors = ["Amos Jun-yeung Ng <me@amos.ng>"]
readme = "README.md"
packages = [{include = "langchain_contrib"}]

[tool.poetry.dependencies]
python = "^3.9"
langchain = "^0.0.119"
pexpect = "^4.8.0"
fvalues = "^0.0.3"
simple-term-menu = "^1.6.1"


[tool.poetry.group.dev.dependencies]
pytest = "^7.2.2"
black = "^23.1.0"
isort = "^5.12.0"
flake8 = "^6.0.0"
flake8-docstrings = "^1.7.0"
autoflake = "^2.0.1"
mypy = "^1.0.1"
pre-commit = "^3.1.1"
pytest-asyncio = "^0.20.3"


[tool.poetry.group.zamm]
optional = true

[tool.poetry.group.zamm.dependencies]
openai = "^0.27.2"
vcr-langchain = "0.0.20"
langchain-visualizer = "^0.0.17"


[tool.poetry.group.docs]
optional = true

[tool.poetry.group.docs.dependencies]
sphinx = "^6.1.3"
sphinx-autobuild = "^2021.3.14"
nbsphinx = "^0.9.1"
jupyterlab = "^3.6.1"
sphinx-book-theme = "^1.0.0"
toml = "^0.10.2"
types-toml = "^0.10.8.5"

[tool.mypy]
ignore_missing_imports = "True"
disallow_untyped_defs = "True"

[tool.autoflake]
in-place = true
recursive = true
remove-all-unused-imports = true
remove-duplicate-keys = true
remove-unused-variables = true

[tool.isort]
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
line_length = 88
profile = "black"

[tool.pytest.ini_options]
asyncio_mode = "auto"
filterwarnings = [
    "error",
    'ignore:There is no current event loop:DeprecationWarning',
    'ignore:unclosed <ssl.SSLSocket:ResourceWarning',
]

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"